
RobotProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000738  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006e4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000738  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000768  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  000007a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ad5  00000000  00000000  00000840  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000081c  00000000  00000000  00001315  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000057e  00000000  00000000  00001b31  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000198  00000000  00000000  000020b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004fd  00000000  00000000  00002248  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000487  00000000  00000000  00002745  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00002bcc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 18 01 	jmp	0x230	; 0x230 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ee       	ldi	r30, 0xE4	; 228
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 30       	cpi	r26, 0x00	; 0
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 83 01 	call	0x306	; 0x306 <main>
  9e:	0c 94 70 03 	jmp	0x6e0	; 0x6e0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
	for (i = n-1; i >= 0; --i, number /= 10)
	{
		numberArray[i] = (number % 10) + '0';
	}
	return numberArray;
}
  a6:	78 94       	sei
  a8:	ec e7       	ldi	r30, 0x7C	; 124
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	80 64       	ori	r24, 0x40	; 64
  b0:	80 83       	st	Z, r24
  b2:	ea e7       	ldi	r30, 0x7A	; 122
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	87 68       	ori	r24, 0x87	; 135
  ba:	80 83       	st	Z, r24
  bc:	08 95       	ret

000000be <change_channel>:
  be:	83 30       	cpi	r24, 0x03	; 3
  c0:	99 f0       	breq	.+38     	; 0xe8 <change_channel+0x2a>
  c2:	28 f4       	brcc	.+10     	; 0xce <change_channel+0x10>
  c4:	81 30       	cpi	r24, 0x01	; 1
  c6:	41 f0       	breq	.+16     	; 0xd8 <change_channel+0x1a>
  c8:	82 30       	cpi	r24, 0x02	; 2
  ca:	51 f0       	breq	.+20     	; 0xe0 <change_channel+0x22>
  cc:	08 95       	ret
  ce:	84 30       	cpi	r24, 0x04	; 4
  d0:	79 f0       	breq	.+30     	; 0xf0 <change_channel+0x32>
  d2:	85 30       	cpi	r24, 0x05	; 5
  d4:	89 f0       	breq	.+34     	; 0xf8 <change_channel+0x3a>
  d6:	08 95       	ret
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  de:	08 95       	ret
  e0:	82 e0       	ldi	r24, 0x02	; 2
  e2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  e6:	08 95       	ret
  e8:	83 e0       	ldi	r24, 0x03	; 3
  ea:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  ee:	08 95       	ret
  f0:	84 e0       	ldi	r24, 0x04	; 4
  f2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  f6:	08 95       	ret
  f8:	85 e0       	ldi	r24, 0x05	; 5
  fa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  fe:	08 95       	ret

00000100 <conversion_init>:
 100:	ea e7       	ldi	r30, 0x7A	; 122
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	80 64       	ori	r24, 0x40	; 64
 108:	80 83       	st	Z, r24
 10a:	08 95       	ret

0000010c <get_adc>:
 10c:	0e 94 5f 00 	call	0xbe	; 0xbe <change_channel>
 110:	0e 94 80 00 	call	0x100	; 0x100 <conversion_init>
 114:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 118:	86 fd       	sbrc	r24, 6
 11a:	fc cf       	rjmp	.-8      	; 0x114 <get_adc+0x8>
 11c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 120:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 124:	08 95       	ret

00000126 <initIRSensors>:
 126:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
 12a:	08 95       	ret

0000012c <getTrackDirection>:
 12c:	0f 93       	push	r16
 12e:	1f 93       	push	r17
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	85 e0       	ldi	r24, 0x05	; 5
 136:	0e 94 86 00 	call	0x10c	; 0x10c <get_adc>
 13a:	ec 01       	movw	r28, r24
 13c:	83 e0       	ldi	r24, 0x03	; 3
 13e:	0e 94 86 00 	call	0x10c	; 0x10c <get_adc>
 142:	8c 01       	movw	r16, r24
 144:	84 e0       	ldi	r24, 0x04	; 4
 146:	0e 94 86 00 	call	0x10c	; 0x10c <get_adc>
 14a:	9e 01       	movw	r18, r28
 14c:	2a 50       	subi	r18, 0x0A	; 10
 14e:	31 09       	sbc	r19, r1
 150:	2d 3a       	cpi	r18, 0xAD	; 173
 152:	33 40       	sbci	r19, 0x03	; 3
 154:	88 f5       	brcc	.+98     	; 0x1b8 <getTrackDirection+0x8c>
 156:	98 01       	movw	r18, r16
 158:	2a 50       	subi	r18, 0x0A	; 10
 15a:	31 09       	sbc	r19, r1
 15c:	2d 3a       	cpi	r18, 0xAD	; 173
 15e:	33 40       	sbci	r19, 0x03	; 3
 160:	80 f5       	brcc	.+96     	; 0x1c2 <getTrackDirection+0x96>
 162:	9e 01       	movw	r18, r28
 164:	28 1b       	sub	r18, r24
 166:	39 0b       	sbc	r19, r25
 168:	80 1b       	sub	r24, r16
 16a:	91 0b       	sbc	r25, r17
 16c:	28 0f       	add	r18, r24
 16e:	39 1f       	adc	r19, r25
 170:	36 95       	lsr	r19
 172:	27 95       	ror	r18
 174:	a3 e1       	ldi	r26, 0x13	; 19
 176:	b3 e8       	ldi	r27, 0x83	; 131
 178:	0e 94 4d 03 	call	0x69a	; 0x69a <__umulhisi3>
 17c:	00 24       	eor	r0, r0
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	00 1c       	adc	r0, r0
 184:	88 0f       	add	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	00 1c       	adc	r0, r0
 18a:	89 2f       	mov	r24, r25
 18c:	90 2d       	mov	r25, r0
 18e:	bc 01       	movw	r22, r24
 190:	61 50       	subi	r22, 0x01	; 1
 192:	71 09       	sbc	r23, r1
 194:	62 30       	cpi	r22, 0x02	; 2
 196:	71 05       	cpc	r23, r1
 198:	28 f4       	brcc	.+10     	; 0x1a4 <getTrackDirection+0x78>
 19a:	6f 3f       	cpi	r22, 0xFF	; 255
 19c:	8f ef       	ldi	r24, 0xFF	; 255
 19e:	78 07       	cpc	r23, r24
 1a0:	21 f4       	brne	.+8      	; 0x1aa <getTrackDirection+0x7e>
 1a2:	05 c0       	rjmp	.+10     	; 0x1ae <getTrackDirection+0x82>
 1a4:	61 e0       	ldi	r22, 0x01	; 1
 1a6:	70 e0       	ldi	r23, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <getTrackDirection+0x82>
 1aa:	6f ef       	ldi	r22, 0xFF	; 255
 1ac:	7f ef       	ldi	r23, 0xFF	; 255
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	0e 94 3e 02 	call	0x47c	; 0x47c <__floatunsisf>
 1b6:	09 c0       	rjmp	.+18     	; 0x1ca <getTrackDirection+0x9e>
 1b8:	60 e0       	ldi	r22, 0x00	; 0
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	80 e8       	ldi	r24, 0x80	; 128
 1be:	9f eb       	ldi	r25, 0xBF	; 191
 1c0:	04 c0       	rjmp	.+8      	; 0x1ca <getTrackDirection+0x9e>
 1c2:	60 e0       	ldi	r22, 0x00	; 0
 1c4:	70 e0       	ldi	r23, 0x00	; 0
 1c6:	80 e8       	ldi	r24, 0x80	; 128
 1c8:	9f e3       	ldi	r25, 0x3F	; 63
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	1f 91       	pop	r17
 1d0:	0f 91       	pop	r16
 1d2:	08 95       	ret

000001d4 <set_speed>:
 1d4:	9b 01       	movw	r18, r22
 1d6:	85 36       	cpi	r24, 0x65	; 101
 1d8:	91 05       	cpc	r25, r1
 1da:	f0 f4       	brcc	.+60     	; 0x218 <set_speed+0x44>
 1dc:	77 23       	and	r23, r23
 1de:	e4 f0       	brlt	.+56     	; 0x218 <set_speed+0x44>
 1e0:	65 36       	cpi	r22, 0x65	; 101
 1e2:	71 05       	cpc	r23, r1
 1e4:	cc f4       	brge	.+50     	; 0x218 <set_speed+0x44>
 1e6:	4f ef       	ldi	r20, 0xFF	; 255
 1e8:	48 9f       	mul	r20, r24
 1ea:	b0 01       	movw	r22, r0
 1ec:	49 9f       	mul	r20, r25
 1ee:	70 0d       	add	r23, r0
 1f0:	11 24       	eor	r1, r1
 1f2:	e4 e6       	ldi	r30, 0x64	; 100
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	cb 01       	movw	r24, r22
 1f8:	bf 01       	movw	r22, r30
 1fa:	0e 94 39 03 	call	0x672	; 0x672 <__divmodhi4>
 1fe:	68 bd       	out	0x28, r22	; 40
 200:	42 9f       	mul	r20, r18
 202:	c0 01       	movw	r24, r0
 204:	43 9f       	mul	r20, r19
 206:	90 0d       	add	r25, r0
 208:	11 24       	eor	r1, r1
 20a:	bf 01       	movw	r22, r30
 20c:	0e 94 39 03 	call	0x672	; 0x672 <__divmodhi4>
 210:	67 bd       	out	0x27, r22	; 39
 212:	85 b5       	in	r24, 0x25	; 37
 214:	85 60       	ori	r24, 0x05	; 5
 216:	85 bd       	out	0x25, r24	; 37
 218:	08 95       	ret

0000021a <pwm_timer_init>:
 21a:	8a b1       	in	r24, 0x0a	; 10
 21c:	80 66       	ori	r24, 0x60	; 96
 21e:	8a b9       	out	0x0a, r24	; 10
 220:	78 94       	sei
 222:	84 b5       	in	r24, 0x24	; 36
 224:	83 6a       	ori	r24, 0xA3	; 163
 226:	84 bd       	out	0x24, r24	; 36
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
 22e:	08 95       	ret

00000230 <__vector_16>:
 230:	1f 92       	push	r1
 232:	0f 92       	push	r0
 234:	0f b6       	in	r0, 0x3f	; 63
 236:	0f 92       	push	r0
 238:	11 24       	eor	r1, r1
 23a:	0f 90       	pop	r0
 23c:	0f be       	out	0x3f, r0	; 63
 23e:	0f 90       	pop	r0
 240:	1f 90       	pop	r1
 242:	18 95       	reti

00000244 <usart_init>:
 244:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 248:	87 e6       	ldi	r24, 0x67	; 103
 24a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 24e:	88 e1       	ldi	r24, 0x18	; 24
 250:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 254:	e2 ec       	ldi	r30, 0xC2	; 194
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	86 60       	ori	r24, 0x06	; 6
 25c:	80 83       	st	Z, r24
 25e:	80 81       	ld	r24, Z
 260:	87 7a       	andi	r24, 0xA7	; 167
 262:	80 83       	st	Z, r24
 264:	08 95       	ret

00000266 <test>:


void test(void){
 266:	4f 92       	push	r4
 268:	5f 92       	push	r5
 26a:	6f 92       	push	r6
 26c:	7f 92       	push	r7
 26e:	8f 92       	push	r8
 270:	9f 92       	push	r9
 272:	af 92       	push	r10
 274:	bf 92       	push	r11
 276:	cf 92       	push	r12
 278:	df 92       	push	r13
 27a:	ef 92       	push	r14
 27c:	ff 92       	push	r15
	float track_dir = getTrackDirection();
 27e:	0e 94 96 00 	call	0x12c	; 0x12c <getTrackDirection>
 282:	6b 01       	movw	r12, r22
 284:	7c 01       	movw	r14, r24

	// 1 -> 100, 0
	//-1 -> 0, 100
	// 0 -> 50, 50
	set_speed((track_dir+1) * 50, (track_dir-1) * -50);
 286:	20 e0       	ldi	r18, 0x00	; 0
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	40 e8       	ldi	r20, 0x80	; 128
 28c:	5f e3       	ldi	r21, 0x3F	; 63
 28e:	0e 94 9b 01 	call	0x336	; 0x336 <__subsf3>
 292:	20 e0       	ldi	r18, 0x00	; 0
 294:	30 e0       	ldi	r19, 0x00	; 0
 296:	48 e4       	ldi	r20, 0x48	; 72
 298:	52 ec       	ldi	r21, 0xC2	; 194
 29a:	0e 94 cc 02 	call	0x598	; 0x598 <__mulsf3>
 29e:	2b 01       	movw	r4, r22
 2a0:	3c 01       	movw	r6, r24
 2a2:	20 e0       	ldi	r18, 0x00	; 0
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	40 e8       	ldi	r20, 0x80	; 128
 2a8:	5f e3       	ldi	r21, 0x3F	; 63
 2aa:	c7 01       	movw	r24, r14
 2ac:	b6 01       	movw	r22, r12
 2ae:	0e 94 9c 01 	call	0x338	; 0x338 <__addsf3>
 2b2:	20 e0       	ldi	r18, 0x00	; 0
 2b4:	30 e0       	ldi	r19, 0x00	; 0
 2b6:	48 e4       	ldi	r20, 0x48	; 72
 2b8:	52 e4       	ldi	r21, 0x42	; 66
 2ba:	0e 94 cc 02 	call	0x598	; 0x598 <__mulsf3>
 2be:	4b 01       	movw	r8, r22
 2c0:	5c 01       	movw	r10, r24
 2c2:	c3 01       	movw	r24, r6
 2c4:	b2 01       	movw	r22, r4
 2c6:	0e 94 08 02 	call	0x410	; 0x410 <__fixsfsi>
 2ca:	6b 01       	movw	r12, r22
 2cc:	7c 01       	movw	r14, r24
 2ce:	c5 01       	movw	r24, r10
 2d0:	b4 01       	movw	r22, r8
 2d2:	0e 94 08 02 	call	0x410	; 0x410 <__fixsfsi>
 2d6:	dc 01       	movw	r26, r24
 2d8:	cb 01       	movw	r24, r22
 2da:	b6 01       	movw	r22, r12
 2dc:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <set_speed>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e0:	8f ed       	ldi	r24, 0xDF	; 223
 2e2:	9e e2       	ldi	r25, 0x2E	; 46
 2e4:	01 97       	sbiw	r24, 0x01	; 1
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <test+0x7e>
 2e8:	00 c0       	rjmp	.+0      	; 0x2ea <test+0x84>
 2ea:	00 00       	nop

	_delay_ms(3);
}
 2ec:	ff 90       	pop	r15
 2ee:	ef 90       	pop	r14
 2f0:	df 90       	pop	r13
 2f2:	cf 90       	pop	r12
 2f4:	bf 90       	pop	r11
 2f6:	af 90       	pop	r10
 2f8:	9f 90       	pop	r9
 2fa:	8f 90       	pop	r8
 2fc:	7f 90       	pop	r7
 2fe:	6f 90       	pop	r6
 300:	5f 90       	pop	r5
 302:	4f 90       	pop	r4
 304:	08 95       	ret

00000306 <main>:
void test(void);
unsigned char * tofrray(uint8_t number);

int main(void)
{
	initIRSensors();
 306:	0e 94 93 00 	call	0x126	; 0x126 <initIRSensors>
	pwm_timer_init();	
 30a:	0e 94 0d 01 	call	0x21a	; 0x21a <pwm_timer_init>
	set_speed(30, 30);
 30e:	6e e1       	ldi	r22, 0x1E	; 30
 310:	70 e0       	ldi	r23, 0x00	; 0
 312:	8e e1       	ldi	r24, 0x1E	; 30
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <set_speed>
 31a:	2f ef       	ldi	r18, 0xFF	; 255
 31c:	89 ef       	ldi	r24, 0xF9	; 249
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	21 50       	subi	r18, 0x01	; 1
 322:	80 40       	sbci	r24, 0x00	; 0
 324:	90 40       	sbci	r25, 0x00	; 0
 326:	e1 f7       	brne	.-8      	; 0x320 <main+0x1a>
 328:	00 c0       	rjmp	.+0      	; 0x32a <main+0x24>
 32a:	00 00       	nop
	_delay_ms(20);
	usart_init();
 32c:	0e 94 22 01 	call	0x244	; 0x244 <usart_init>

    while (1) 
    {

		test();
 330:	0e 94 33 01 	call	0x266	; 0x266 <test>
 334:	fd cf       	rjmp	.-6      	; 0x330 <main+0x2a>

00000336 <__subsf3>:
 336:	50 58       	subi	r21, 0x80	; 128

00000338 <__addsf3>:
 338:	bb 27       	eor	r27, r27
 33a:	aa 27       	eor	r26, r26
 33c:	0e 94 b3 01 	call	0x366	; 0x366 <__addsf3x>
 340:	0c 94 92 02 	jmp	0x524	; 0x524 <__fp_round>
 344:	0e 94 84 02 	call	0x508	; 0x508 <__fp_pscA>
 348:	38 f0       	brcs	.+14     	; 0x358 <__addsf3+0x20>
 34a:	0e 94 8b 02 	call	0x516	; 0x516 <__fp_pscB>
 34e:	20 f0       	brcs	.+8      	; 0x358 <__addsf3+0x20>
 350:	39 f4       	brne	.+14     	; 0x360 <__addsf3+0x28>
 352:	9f 3f       	cpi	r25, 0xFF	; 255
 354:	19 f4       	brne	.+6      	; 0x35c <__addsf3+0x24>
 356:	26 f4       	brtc	.+8      	; 0x360 <__addsf3+0x28>
 358:	0c 94 81 02 	jmp	0x502	; 0x502 <__fp_nan>
 35c:	0e f4       	brtc	.+2      	; 0x360 <__addsf3+0x28>
 35e:	e0 95       	com	r30
 360:	e7 fb       	bst	r30, 7
 362:	0c 94 7b 02 	jmp	0x4f6	; 0x4f6 <__fp_inf>

00000366 <__addsf3x>:
 366:	e9 2f       	mov	r30, r25
 368:	0e 94 a3 02 	call	0x546	; 0x546 <__fp_split3>
 36c:	58 f3       	brcs	.-42     	; 0x344 <__addsf3+0xc>
 36e:	ba 17       	cp	r27, r26
 370:	62 07       	cpc	r22, r18
 372:	73 07       	cpc	r23, r19
 374:	84 07       	cpc	r24, r20
 376:	95 07       	cpc	r25, r21
 378:	20 f0       	brcs	.+8      	; 0x382 <__addsf3x+0x1c>
 37a:	79 f4       	brne	.+30     	; 0x39a <__addsf3x+0x34>
 37c:	a6 f5       	brtc	.+104    	; 0x3e6 <__addsf3x+0x80>
 37e:	0c 94 c5 02 	jmp	0x58a	; 0x58a <__fp_zero>
 382:	0e f4       	brtc	.+2      	; 0x386 <__addsf3x+0x20>
 384:	e0 95       	com	r30
 386:	0b 2e       	mov	r0, r27
 388:	ba 2f       	mov	r27, r26
 38a:	a0 2d       	mov	r26, r0
 38c:	0b 01       	movw	r0, r22
 38e:	b9 01       	movw	r22, r18
 390:	90 01       	movw	r18, r0
 392:	0c 01       	movw	r0, r24
 394:	ca 01       	movw	r24, r20
 396:	a0 01       	movw	r20, r0
 398:	11 24       	eor	r1, r1
 39a:	ff 27       	eor	r31, r31
 39c:	59 1b       	sub	r21, r25
 39e:	99 f0       	breq	.+38     	; 0x3c6 <__addsf3x+0x60>
 3a0:	59 3f       	cpi	r21, 0xF9	; 249
 3a2:	50 f4       	brcc	.+20     	; 0x3b8 <__addsf3x+0x52>
 3a4:	50 3e       	cpi	r21, 0xE0	; 224
 3a6:	68 f1       	brcs	.+90     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3a8:	1a 16       	cp	r1, r26
 3aa:	f0 40       	sbci	r31, 0x00	; 0
 3ac:	a2 2f       	mov	r26, r18
 3ae:	23 2f       	mov	r18, r19
 3b0:	34 2f       	mov	r19, r20
 3b2:	44 27       	eor	r20, r20
 3b4:	58 5f       	subi	r21, 0xF8	; 248
 3b6:	f3 cf       	rjmp	.-26     	; 0x39e <__addsf3x+0x38>
 3b8:	46 95       	lsr	r20
 3ba:	37 95       	ror	r19
 3bc:	27 95       	ror	r18
 3be:	a7 95       	ror	r26
 3c0:	f0 40       	sbci	r31, 0x00	; 0
 3c2:	53 95       	inc	r21
 3c4:	c9 f7       	brne	.-14     	; 0x3b8 <__addsf3x+0x52>
 3c6:	7e f4       	brtc	.+30     	; 0x3e6 <__addsf3x+0x80>
 3c8:	1f 16       	cp	r1, r31
 3ca:	ba 0b       	sbc	r27, r26
 3cc:	62 0b       	sbc	r22, r18
 3ce:	73 0b       	sbc	r23, r19
 3d0:	84 0b       	sbc	r24, r20
 3d2:	ba f0       	brmi	.+46     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3d4:	91 50       	subi	r25, 0x01	; 1
 3d6:	a1 f0       	breq	.+40     	; 0x400 <__EEPROM_REGION_LENGTH__>
 3d8:	ff 0f       	add	r31, r31
 3da:	bb 1f       	adc	r27, r27
 3dc:	66 1f       	adc	r22, r22
 3de:	77 1f       	adc	r23, r23
 3e0:	88 1f       	adc	r24, r24
 3e2:	c2 f7       	brpl	.-16     	; 0x3d4 <__addsf3x+0x6e>
 3e4:	0e c0       	rjmp	.+28     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3e6:	ba 0f       	add	r27, r26
 3e8:	62 1f       	adc	r22, r18
 3ea:	73 1f       	adc	r23, r19
 3ec:	84 1f       	adc	r24, r20
 3ee:	48 f4       	brcc	.+18     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3f0:	87 95       	ror	r24
 3f2:	77 95       	ror	r23
 3f4:	67 95       	ror	r22
 3f6:	b7 95       	ror	r27
 3f8:	f7 95       	ror	r31
 3fa:	9e 3f       	cpi	r25, 0xFE	; 254
 3fc:	08 f0       	brcs	.+2      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fe:	b0 cf       	rjmp	.-160    	; 0x360 <__addsf3+0x28>
 400:	93 95       	inc	r25
 402:	88 0f       	add	r24, r24
 404:	08 f0       	brcs	.+2      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 406:	99 27       	eor	r25, r25
 408:	ee 0f       	add	r30, r30
 40a:	97 95       	ror	r25
 40c:	87 95       	ror	r24
 40e:	08 95       	ret

00000410 <__fixsfsi>:
 410:	0e 94 0f 02 	call	0x41e	; 0x41e <__fixunssfsi>
 414:	68 94       	set
 416:	b1 11       	cpse	r27, r1
 418:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__fp_szero>
 41c:	08 95       	ret

0000041e <__fixunssfsi>:
 41e:	0e 94 ab 02 	call	0x556	; 0x556 <__fp_splitA>
 422:	88 f0       	brcs	.+34     	; 0x446 <__fixunssfsi+0x28>
 424:	9f 57       	subi	r25, 0x7F	; 127
 426:	98 f0       	brcs	.+38     	; 0x44e <__fixunssfsi+0x30>
 428:	b9 2f       	mov	r27, r25
 42a:	99 27       	eor	r25, r25
 42c:	b7 51       	subi	r27, 0x17	; 23
 42e:	b0 f0       	brcs	.+44     	; 0x45c <__fixunssfsi+0x3e>
 430:	e1 f0       	breq	.+56     	; 0x46a <__fixunssfsi+0x4c>
 432:	66 0f       	add	r22, r22
 434:	77 1f       	adc	r23, r23
 436:	88 1f       	adc	r24, r24
 438:	99 1f       	adc	r25, r25
 43a:	1a f0       	brmi	.+6      	; 0x442 <__fixunssfsi+0x24>
 43c:	ba 95       	dec	r27
 43e:	c9 f7       	brne	.-14     	; 0x432 <__fixunssfsi+0x14>
 440:	14 c0       	rjmp	.+40     	; 0x46a <__fixunssfsi+0x4c>
 442:	b1 30       	cpi	r27, 0x01	; 1
 444:	91 f0       	breq	.+36     	; 0x46a <__fixunssfsi+0x4c>
 446:	0e 94 c5 02 	call	0x58a	; 0x58a <__fp_zero>
 44a:	b1 e0       	ldi	r27, 0x01	; 1
 44c:	08 95       	ret
 44e:	0c 94 c5 02 	jmp	0x58a	; 0x58a <__fp_zero>
 452:	67 2f       	mov	r22, r23
 454:	78 2f       	mov	r23, r24
 456:	88 27       	eor	r24, r24
 458:	b8 5f       	subi	r27, 0xF8	; 248
 45a:	39 f0       	breq	.+14     	; 0x46a <__fixunssfsi+0x4c>
 45c:	b9 3f       	cpi	r27, 0xF9	; 249
 45e:	cc f3       	brlt	.-14     	; 0x452 <__fixunssfsi+0x34>
 460:	86 95       	lsr	r24
 462:	77 95       	ror	r23
 464:	67 95       	ror	r22
 466:	b3 95       	inc	r27
 468:	d9 f7       	brne	.-10     	; 0x460 <__fixunssfsi+0x42>
 46a:	3e f4       	brtc	.+14     	; 0x47a <__fixunssfsi+0x5c>
 46c:	90 95       	com	r25
 46e:	80 95       	com	r24
 470:	70 95       	com	r23
 472:	61 95       	neg	r22
 474:	7f 4f       	sbci	r23, 0xFF	; 255
 476:	8f 4f       	sbci	r24, 0xFF	; 255
 478:	9f 4f       	sbci	r25, 0xFF	; 255
 47a:	08 95       	ret

0000047c <__floatunsisf>:
 47c:	e8 94       	clt
 47e:	09 c0       	rjmp	.+18     	; 0x492 <__floatsisf+0x12>

00000480 <__floatsisf>:
 480:	97 fb       	bst	r25, 7
 482:	3e f4       	brtc	.+14     	; 0x492 <__floatsisf+0x12>
 484:	90 95       	com	r25
 486:	80 95       	com	r24
 488:	70 95       	com	r23
 48a:	61 95       	neg	r22
 48c:	7f 4f       	sbci	r23, 0xFF	; 255
 48e:	8f 4f       	sbci	r24, 0xFF	; 255
 490:	9f 4f       	sbci	r25, 0xFF	; 255
 492:	99 23       	and	r25, r25
 494:	a9 f0       	breq	.+42     	; 0x4c0 <__floatsisf+0x40>
 496:	f9 2f       	mov	r31, r25
 498:	96 e9       	ldi	r25, 0x96	; 150
 49a:	bb 27       	eor	r27, r27
 49c:	93 95       	inc	r25
 49e:	f6 95       	lsr	r31
 4a0:	87 95       	ror	r24
 4a2:	77 95       	ror	r23
 4a4:	67 95       	ror	r22
 4a6:	b7 95       	ror	r27
 4a8:	f1 11       	cpse	r31, r1
 4aa:	f8 cf       	rjmp	.-16     	; 0x49c <__floatsisf+0x1c>
 4ac:	fa f4       	brpl	.+62     	; 0x4ec <__floatsisf+0x6c>
 4ae:	bb 0f       	add	r27, r27
 4b0:	11 f4       	brne	.+4      	; 0x4b6 <__floatsisf+0x36>
 4b2:	60 ff       	sbrs	r22, 0
 4b4:	1b c0       	rjmp	.+54     	; 0x4ec <__floatsisf+0x6c>
 4b6:	6f 5f       	subi	r22, 0xFF	; 255
 4b8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ba:	8f 4f       	sbci	r24, 0xFF	; 255
 4bc:	9f 4f       	sbci	r25, 0xFF	; 255
 4be:	16 c0       	rjmp	.+44     	; 0x4ec <__floatsisf+0x6c>
 4c0:	88 23       	and	r24, r24
 4c2:	11 f0       	breq	.+4      	; 0x4c8 <__floatsisf+0x48>
 4c4:	96 e9       	ldi	r25, 0x96	; 150
 4c6:	11 c0       	rjmp	.+34     	; 0x4ea <__floatsisf+0x6a>
 4c8:	77 23       	and	r23, r23
 4ca:	21 f0       	breq	.+8      	; 0x4d4 <__floatsisf+0x54>
 4cc:	9e e8       	ldi	r25, 0x8E	; 142
 4ce:	87 2f       	mov	r24, r23
 4d0:	76 2f       	mov	r23, r22
 4d2:	05 c0       	rjmp	.+10     	; 0x4de <__floatsisf+0x5e>
 4d4:	66 23       	and	r22, r22
 4d6:	71 f0       	breq	.+28     	; 0x4f4 <__floatsisf+0x74>
 4d8:	96 e8       	ldi	r25, 0x86	; 134
 4da:	86 2f       	mov	r24, r22
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	60 e0       	ldi	r22, 0x00	; 0
 4e0:	2a f0       	brmi	.+10     	; 0x4ec <__floatsisf+0x6c>
 4e2:	9a 95       	dec	r25
 4e4:	66 0f       	add	r22, r22
 4e6:	77 1f       	adc	r23, r23
 4e8:	88 1f       	adc	r24, r24
 4ea:	da f7       	brpl	.-10     	; 0x4e2 <__floatsisf+0x62>
 4ec:	88 0f       	add	r24, r24
 4ee:	96 95       	lsr	r25
 4f0:	87 95       	ror	r24
 4f2:	97 f9       	bld	r25, 7
 4f4:	08 95       	ret

000004f6 <__fp_inf>:
 4f6:	97 f9       	bld	r25, 7
 4f8:	9f 67       	ori	r25, 0x7F	; 127
 4fa:	80 e8       	ldi	r24, 0x80	; 128
 4fc:	70 e0       	ldi	r23, 0x00	; 0
 4fe:	60 e0       	ldi	r22, 0x00	; 0
 500:	08 95       	ret

00000502 <__fp_nan>:
 502:	9f ef       	ldi	r25, 0xFF	; 255
 504:	80 ec       	ldi	r24, 0xC0	; 192
 506:	08 95       	ret

00000508 <__fp_pscA>:
 508:	00 24       	eor	r0, r0
 50a:	0a 94       	dec	r0
 50c:	16 16       	cp	r1, r22
 50e:	17 06       	cpc	r1, r23
 510:	18 06       	cpc	r1, r24
 512:	09 06       	cpc	r0, r25
 514:	08 95       	ret

00000516 <__fp_pscB>:
 516:	00 24       	eor	r0, r0
 518:	0a 94       	dec	r0
 51a:	12 16       	cp	r1, r18
 51c:	13 06       	cpc	r1, r19
 51e:	14 06       	cpc	r1, r20
 520:	05 06       	cpc	r0, r21
 522:	08 95       	ret

00000524 <__fp_round>:
 524:	09 2e       	mov	r0, r25
 526:	03 94       	inc	r0
 528:	00 0c       	add	r0, r0
 52a:	11 f4       	brne	.+4      	; 0x530 <__fp_round+0xc>
 52c:	88 23       	and	r24, r24
 52e:	52 f0       	brmi	.+20     	; 0x544 <__fp_round+0x20>
 530:	bb 0f       	add	r27, r27
 532:	40 f4       	brcc	.+16     	; 0x544 <__fp_round+0x20>
 534:	bf 2b       	or	r27, r31
 536:	11 f4       	brne	.+4      	; 0x53c <__fp_round+0x18>
 538:	60 ff       	sbrs	r22, 0
 53a:	04 c0       	rjmp	.+8      	; 0x544 <__fp_round+0x20>
 53c:	6f 5f       	subi	r22, 0xFF	; 255
 53e:	7f 4f       	sbci	r23, 0xFF	; 255
 540:	8f 4f       	sbci	r24, 0xFF	; 255
 542:	9f 4f       	sbci	r25, 0xFF	; 255
 544:	08 95       	ret

00000546 <__fp_split3>:
 546:	57 fd       	sbrc	r21, 7
 548:	90 58       	subi	r25, 0x80	; 128
 54a:	44 0f       	add	r20, r20
 54c:	55 1f       	adc	r21, r21
 54e:	59 f0       	breq	.+22     	; 0x566 <__fp_splitA+0x10>
 550:	5f 3f       	cpi	r21, 0xFF	; 255
 552:	71 f0       	breq	.+28     	; 0x570 <__fp_splitA+0x1a>
 554:	47 95       	ror	r20

00000556 <__fp_splitA>:
 556:	88 0f       	add	r24, r24
 558:	97 fb       	bst	r25, 7
 55a:	99 1f       	adc	r25, r25
 55c:	61 f0       	breq	.+24     	; 0x576 <__fp_splitA+0x20>
 55e:	9f 3f       	cpi	r25, 0xFF	; 255
 560:	79 f0       	breq	.+30     	; 0x580 <__fp_splitA+0x2a>
 562:	87 95       	ror	r24
 564:	08 95       	ret
 566:	12 16       	cp	r1, r18
 568:	13 06       	cpc	r1, r19
 56a:	14 06       	cpc	r1, r20
 56c:	55 1f       	adc	r21, r21
 56e:	f2 cf       	rjmp	.-28     	; 0x554 <__fp_split3+0xe>
 570:	46 95       	lsr	r20
 572:	f1 df       	rcall	.-30     	; 0x556 <__fp_splitA>
 574:	08 c0       	rjmp	.+16     	; 0x586 <__fp_splitA+0x30>
 576:	16 16       	cp	r1, r22
 578:	17 06       	cpc	r1, r23
 57a:	18 06       	cpc	r1, r24
 57c:	99 1f       	adc	r25, r25
 57e:	f1 cf       	rjmp	.-30     	; 0x562 <__fp_splitA+0xc>
 580:	86 95       	lsr	r24
 582:	71 05       	cpc	r23, r1
 584:	61 05       	cpc	r22, r1
 586:	08 94       	sec
 588:	08 95       	ret

0000058a <__fp_zero>:
 58a:	e8 94       	clt

0000058c <__fp_szero>:
 58c:	bb 27       	eor	r27, r27
 58e:	66 27       	eor	r22, r22
 590:	77 27       	eor	r23, r23
 592:	cb 01       	movw	r24, r22
 594:	97 f9       	bld	r25, 7
 596:	08 95       	ret

00000598 <__mulsf3>:
 598:	0e 94 df 02 	call	0x5be	; 0x5be <__mulsf3x>
 59c:	0c 94 92 02 	jmp	0x524	; 0x524 <__fp_round>
 5a0:	0e 94 84 02 	call	0x508	; 0x508 <__fp_pscA>
 5a4:	38 f0       	brcs	.+14     	; 0x5b4 <__mulsf3+0x1c>
 5a6:	0e 94 8b 02 	call	0x516	; 0x516 <__fp_pscB>
 5aa:	20 f0       	brcs	.+8      	; 0x5b4 <__mulsf3+0x1c>
 5ac:	95 23       	and	r25, r21
 5ae:	11 f0       	breq	.+4      	; 0x5b4 <__mulsf3+0x1c>
 5b0:	0c 94 7b 02 	jmp	0x4f6	; 0x4f6 <__fp_inf>
 5b4:	0c 94 81 02 	jmp	0x502	; 0x502 <__fp_nan>
 5b8:	11 24       	eor	r1, r1
 5ba:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__fp_szero>

000005be <__mulsf3x>:
 5be:	0e 94 a3 02 	call	0x546	; 0x546 <__fp_split3>
 5c2:	70 f3       	brcs	.-36     	; 0x5a0 <__mulsf3+0x8>

000005c4 <__mulsf3_pse>:
 5c4:	95 9f       	mul	r25, r21
 5c6:	c1 f3       	breq	.-16     	; 0x5b8 <__mulsf3+0x20>
 5c8:	95 0f       	add	r25, r21
 5ca:	50 e0       	ldi	r21, 0x00	; 0
 5cc:	55 1f       	adc	r21, r21
 5ce:	62 9f       	mul	r22, r18
 5d0:	f0 01       	movw	r30, r0
 5d2:	72 9f       	mul	r23, r18
 5d4:	bb 27       	eor	r27, r27
 5d6:	f0 0d       	add	r31, r0
 5d8:	b1 1d       	adc	r27, r1
 5da:	63 9f       	mul	r22, r19
 5dc:	aa 27       	eor	r26, r26
 5de:	f0 0d       	add	r31, r0
 5e0:	b1 1d       	adc	r27, r1
 5e2:	aa 1f       	adc	r26, r26
 5e4:	64 9f       	mul	r22, r20
 5e6:	66 27       	eor	r22, r22
 5e8:	b0 0d       	add	r27, r0
 5ea:	a1 1d       	adc	r26, r1
 5ec:	66 1f       	adc	r22, r22
 5ee:	82 9f       	mul	r24, r18
 5f0:	22 27       	eor	r18, r18
 5f2:	b0 0d       	add	r27, r0
 5f4:	a1 1d       	adc	r26, r1
 5f6:	62 1f       	adc	r22, r18
 5f8:	73 9f       	mul	r23, r19
 5fa:	b0 0d       	add	r27, r0
 5fc:	a1 1d       	adc	r26, r1
 5fe:	62 1f       	adc	r22, r18
 600:	83 9f       	mul	r24, r19
 602:	a0 0d       	add	r26, r0
 604:	61 1d       	adc	r22, r1
 606:	22 1f       	adc	r18, r18
 608:	74 9f       	mul	r23, r20
 60a:	33 27       	eor	r19, r19
 60c:	a0 0d       	add	r26, r0
 60e:	61 1d       	adc	r22, r1
 610:	23 1f       	adc	r18, r19
 612:	84 9f       	mul	r24, r20
 614:	60 0d       	add	r22, r0
 616:	21 1d       	adc	r18, r1
 618:	82 2f       	mov	r24, r18
 61a:	76 2f       	mov	r23, r22
 61c:	6a 2f       	mov	r22, r26
 61e:	11 24       	eor	r1, r1
 620:	9f 57       	subi	r25, 0x7F	; 127
 622:	50 40       	sbci	r21, 0x00	; 0
 624:	9a f0       	brmi	.+38     	; 0x64c <__mulsf3_pse+0x88>
 626:	f1 f0       	breq	.+60     	; 0x664 <__mulsf3_pse+0xa0>
 628:	88 23       	and	r24, r24
 62a:	4a f0       	brmi	.+18     	; 0x63e <__mulsf3_pse+0x7a>
 62c:	ee 0f       	add	r30, r30
 62e:	ff 1f       	adc	r31, r31
 630:	bb 1f       	adc	r27, r27
 632:	66 1f       	adc	r22, r22
 634:	77 1f       	adc	r23, r23
 636:	88 1f       	adc	r24, r24
 638:	91 50       	subi	r25, 0x01	; 1
 63a:	50 40       	sbci	r21, 0x00	; 0
 63c:	a9 f7       	brne	.-22     	; 0x628 <__mulsf3_pse+0x64>
 63e:	9e 3f       	cpi	r25, 0xFE	; 254
 640:	51 05       	cpc	r21, r1
 642:	80 f0       	brcs	.+32     	; 0x664 <__mulsf3_pse+0xa0>
 644:	0c 94 7b 02 	jmp	0x4f6	; 0x4f6 <__fp_inf>
 648:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__fp_szero>
 64c:	5f 3f       	cpi	r21, 0xFF	; 255
 64e:	e4 f3       	brlt	.-8      	; 0x648 <__mulsf3_pse+0x84>
 650:	98 3e       	cpi	r25, 0xE8	; 232
 652:	d4 f3       	brlt	.-12     	; 0x648 <__mulsf3_pse+0x84>
 654:	86 95       	lsr	r24
 656:	77 95       	ror	r23
 658:	67 95       	ror	r22
 65a:	b7 95       	ror	r27
 65c:	f7 95       	ror	r31
 65e:	e7 95       	ror	r30
 660:	9f 5f       	subi	r25, 0xFF	; 255
 662:	c1 f7       	brne	.-16     	; 0x654 <__mulsf3_pse+0x90>
 664:	fe 2b       	or	r31, r30
 666:	88 0f       	add	r24, r24
 668:	91 1d       	adc	r25, r1
 66a:	96 95       	lsr	r25
 66c:	87 95       	ror	r24
 66e:	97 f9       	bld	r25, 7
 670:	08 95       	ret

00000672 <__divmodhi4>:
 672:	97 fb       	bst	r25, 7
 674:	07 2e       	mov	r0, r23
 676:	16 f4       	brtc	.+4      	; 0x67c <__divmodhi4+0xa>
 678:	00 94       	com	r0
 67a:	07 d0       	rcall	.+14     	; 0x68a <__divmodhi4_neg1>
 67c:	77 fd       	sbrc	r23, 7
 67e:	09 d0       	rcall	.+18     	; 0x692 <__divmodhi4_neg2>
 680:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <__udivmodhi4>
 684:	07 fc       	sbrc	r0, 7
 686:	05 d0       	rcall	.+10     	; 0x692 <__divmodhi4_neg2>
 688:	3e f4       	brtc	.+14     	; 0x698 <__divmodhi4_exit>

0000068a <__divmodhi4_neg1>:
 68a:	90 95       	com	r25
 68c:	81 95       	neg	r24
 68e:	9f 4f       	sbci	r25, 0xFF	; 255
 690:	08 95       	ret

00000692 <__divmodhi4_neg2>:
 692:	70 95       	com	r23
 694:	61 95       	neg	r22
 696:	7f 4f       	sbci	r23, 0xFF	; 255

00000698 <__divmodhi4_exit>:
 698:	08 95       	ret

0000069a <__umulhisi3>:
 69a:	a2 9f       	mul	r26, r18
 69c:	b0 01       	movw	r22, r0
 69e:	b3 9f       	mul	r27, r19
 6a0:	c0 01       	movw	r24, r0
 6a2:	a3 9f       	mul	r26, r19
 6a4:	70 0d       	add	r23, r0
 6a6:	81 1d       	adc	r24, r1
 6a8:	11 24       	eor	r1, r1
 6aa:	91 1d       	adc	r25, r1
 6ac:	b2 9f       	mul	r27, r18
 6ae:	70 0d       	add	r23, r0
 6b0:	81 1d       	adc	r24, r1
 6b2:	11 24       	eor	r1, r1
 6b4:	91 1d       	adc	r25, r1
 6b6:	08 95       	ret

000006b8 <__udivmodhi4>:
 6b8:	aa 1b       	sub	r26, r26
 6ba:	bb 1b       	sub	r27, r27
 6bc:	51 e1       	ldi	r21, 0x11	; 17
 6be:	07 c0       	rjmp	.+14     	; 0x6ce <__udivmodhi4_ep>

000006c0 <__udivmodhi4_loop>:
 6c0:	aa 1f       	adc	r26, r26
 6c2:	bb 1f       	adc	r27, r27
 6c4:	a6 17       	cp	r26, r22
 6c6:	b7 07       	cpc	r27, r23
 6c8:	10 f0       	brcs	.+4      	; 0x6ce <__udivmodhi4_ep>
 6ca:	a6 1b       	sub	r26, r22
 6cc:	b7 0b       	sbc	r27, r23

000006ce <__udivmodhi4_ep>:
 6ce:	88 1f       	adc	r24, r24
 6d0:	99 1f       	adc	r25, r25
 6d2:	5a 95       	dec	r21
 6d4:	a9 f7       	brne	.-22     	; 0x6c0 <__udivmodhi4_loop>
 6d6:	80 95       	com	r24
 6d8:	90 95       	com	r25
 6da:	bc 01       	movw	r22, r24
 6dc:	cd 01       	movw	r24, r26
 6de:	08 95       	ret

000006e0 <_exit>:
 6e0:	f8 94       	cli

000006e2 <__stop_program>:
 6e2:	ff cf       	rjmp	.-2      	; 0x6e2 <__stop_program>
